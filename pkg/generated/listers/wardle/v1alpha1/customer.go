/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "k8s.io/sample-apiserver/pkg/apis/wardle/v1alpha1"
)

// CustomerLister helps list Customers.
// All objects returned here must be treated as read-only.
type CustomerLister interface {
	// List lists all Customers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Customer, err error)
	// Customers returns an object that can list and get Customers.
	Customers(namespace string) CustomerNamespaceLister
	CustomerListerExpansion
}

// customerLister implements the CustomerLister interface.
type customerLister struct {
	indexer cache.Indexer
}

// NewCustomerLister returns a new CustomerLister.
func NewCustomerLister(indexer cache.Indexer) CustomerLister {
	return &customerLister{indexer: indexer}
}

// List lists all Customers in the indexer.
func (s *customerLister) List(selector labels.Selector) (ret []*v1alpha1.Customer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Customer))
	})
	return ret, err
}

// Customers returns an object that can list and get Customers.
func (s *customerLister) Customers(namespace string) CustomerNamespaceLister {
	return customerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomerNamespaceLister helps list and get Customers.
// All objects returned here must be treated as read-only.
type CustomerNamespaceLister interface {
	// List lists all Customers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Customer, err error)
	// Get retrieves the Customer from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Customer, error)
	CustomerNamespaceListerExpansion
}

// customerNamespaceLister implements the CustomerNamespaceLister
// interface.
type customerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Customers in the indexer for a given namespace.
func (s customerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Customer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Customer))
	})
	return ret, err
}

// Get retrieves the Customer from the indexer for a given namespace and name.
func (s customerNamespaceLister) Get(name string) (*v1alpha1.Customer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("customer"), name)
	}
	return obj.(*v1alpha1.Customer), nil
}
